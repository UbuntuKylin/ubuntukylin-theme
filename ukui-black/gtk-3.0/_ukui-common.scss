
/***************
 * Base States *
 ***************/
%widget_base_class {
    box-shadow: none;
	border-radius: 4px;
    /* normal */
    color: $fg_color;
    background-color: $bg_color;


    /* focus */
    &:focus {
        color: $base_focused_fg_color;
        background-color: $base_focused_bg_color;
    }


    /* prelight */
    &:hover {
        color: $base_prelight_fg_color;
        background-color: $base_prelight_bg_color;
    }

    /* active */
    &:active {
        color: $base_active_fg_color;
        background-color: $base_active_bg_color;
    }

    /* checked */
    &:checked {
        color: $base_checked_fg_color;
        background-color: $base_checked_bg_color;
    }

    /* insensitive */
    &:disabled {
        color: $disable_fg_color;
        background-color: $disable_bg_color;
    }
}



/**************
 * Buttons *
 **************/
%button_base_class {
    @extend %widget_base_class;
	color: $fg_color;
    background-image: image($button_bg_color);

    &:hover {
		color: $active_fg_color;
        background-image: $base_prelight_bg_image;
    }

    &:active {		
		color: $active_fg_color;
        background-image: $base_active_bg_image;
    }

    &:checked {
		color: $active_fg_color;
        background-image: $base_checked_bg_image;
    }

    &:disabled {
		color: $disable_fg_color;
        background-image: image($disable_bg_color);
    }

    &:backdrop {
		color: $fg_color;
        background-image: image($bg_color);
    }

    &:backdrop:disabled {
		color: $disable_fg_color;
        background-image: image($disable_bg_color);
    }
}

button {
    @extend %button_base_class;

    min-height: 24px;
}

/*********
 * Menus *
 *********/
%menuitem_base_class {
    @extend %widget_base_class;
		background:$menu_color;
    &:disabled {
        background-image: image($disable_bg_color);
  		color:$disable_fg_color;
    }
    min-height: 22px;
}
menubar,
.menubar {
    -GtkWidget-window-dragging: true;
	@extend %widget_base_class;
    padding: 0px;
	border-width:10px;
	border-color: $fg_color;
	border-radius:4px;
	color: $headerbar_normal_fg_color;
	background-color: $menu_color; 
    &:backdrop {
        background-color: $menu_color;  
    }
	>decoration{
		border-radius: 4px;	
	}
    > menuitem {
		border-radius:4px;
        min-height: 16px;
        padding: 4px 8px;
		box-shadow: none;
		color: $headerbar_normal_fg_color;
		>decoration{
			border-radius: 4px;	
		}
        &:hover {
            //Seems like it :hover even with keyboard focus
            box-shadow: none;
            color: $active_fg_color;
			background-color:$active_bg_color;
        }
        &:disabled {
            color: $disable_fg_color;
            box-shadow: none;
        }
    }

    menu {		
		border-radius:6px;
        > menuitem {
            @extend %menuitem_base_class;
			margin-left:5px;
			margin-right:5px;
        }
    }
}

menu,
.menu,
.context-menu {
    margin: 4px;
    padding: 2px 0px;
    background-color: $menu_color;
    border: 1px solid $bg_color;
    .csd & {
        border: none;
    }
    &:backdrop {
        background-color: $menu_color;
    }
    menuitem {
        min-height: 16px;
        min-width: 40px;
        padding: 4px 6px;
        text-shadow: none;
        &:hover {
            box-shadow: none;
            color: $active_fg_color;
			background-color:$active_bg_color;
        }
        &:disabled {
            color: $disable_fg_color;
            &:backdrop {
                color: $disable_bg_color;
            }
        }

        &:backdrop,
        &:backdrop:hover {
            color: $backdrop_fg_color;
            background-color: transparent;
        }

        // submenu indicators
        arrow {
            min-height: 16px;
            min-width: 16px;
            &:dir(ltr) {
                -gtk-icon-source: -gtk-icontheme("pan-end-symbolic");
                margin-left: 10px;
            }
            &:dir(rtl) {
                -gtk-icon-source: -gtk-icontheme("pan-end-symbolic-rtl");
                margin-right: 10px;
            }
        }
        label {
            &:dir(rtl), &:dir(ltr) {
                color: inherit;
            }
        }
    }
    // overflow arrows
    > arrow {
        @include button(undecorated);
        min-height: 16px;
        min-width: 16px;
        padding: 4px;
        background-color: $menu_color;
        border-radius: 4px;
        &:hover {
            box-shadow: none;
            color: $active_fg_color;
			background-color:$active_bg_color;
        }
        &.top {
            margin-top: -6px;
            border-bottom: 1px solid mix($fg_color, $bg_color, 10%);
            -gtk-icon-source: -gtk-icontheme("pan-up-symbolic");
        }

        &.bottom {
            margin-bottom: -6px;
            border-top: 1px solid mix($fg_color, $bg_color, 10%);
            -gtk-icon-source: -gtk-icontheme("pan-down-symbolic");
        }

        &:backdrop {
            background-color: $backdrop_menu_color;
        }

        &:disabled {
            color: $disable_fg_color;
            background-color: $disable_bg_color;
            border-color: $disable_bg_color;
        }
    }
}


/**************
 * ComboBoxes *
 **************/
combobox {
	
    menu {
        menuitem {
			border-radius: 4px;
            min-height: 23px;
            background-color: $combobox_dropdown_menuitem_normal_bg_color;

            &:hover {
                color: $fg_color;
                background-color: $active_bg_color;
            }
        }
    }

    /* When combobox isn't clicked, it uses button's style. i don't know what the hell. */
    button {
        background-image: $combobox_button_normal_bg_image;

    }

    /* When combobox entry isn't clicked, it uses entry's style. I don't want to change it. */
}

/****************
 * Text Entries *
 ****************/
entry {
	background-color:    $text_bg_color;
	border-radius: 4px;
}


/*
 * Notebooks
 */
%tab_border {
    &.top {
        tab {
            border-style: none solid solid none; /* bottom right*/
            &:checked {
                border-bottom-style: none;
            }
        }
    }
    &.left {
        tab {
            border-style: none solid solid none; /* bottom right*/
            &:checked {
                border-right-style: none;
            }
        }
    }
    &.bottom {
        tab {
            border-style: solid solid none none; /* top right */
            &:checked {
                border-top-style: none;
            }
        }
    }
    &.right {
        tab {
            border-style: none none solid solid; /* left bottom */
            &:checked {
                border-left-style: none;
            }
        }
    }

}

%tab_closebutton {
    button {
		border-radius:10px;
        background-image: $notebook_tab_closebutton_normal_bg_image;
    }
    &:checked {
        button {
			border-radius:10px;
            background-image: $notebook_tab_closebutton_checked_bg_image;
        }
    }
	&:hover{
		button{
			border-radius: 10px;
			background-image: $notebook_tab_closebutton_active_bg_image;		
		}
	}

}

notebook {
    > header {
		border-color: $disable_bd_color;
        > tabs {
            > tab {
                /* close button in tab */
                @extend %tab_closebutton;
            }
        }
        @extend %tab_border;
    }
}


/****************************
 * Check, Radio				*
 * It uses button's style	*
 ***************************/
check, radio {
    @extend %button_base_class;
	border-radius: 4px;
	color:$bg_color;
}

radio {
    border-radius: 100%;
	color:$bg_color;
}


/*********************
 * Switch & its slider
 *********************/
switch {
    @extend %widget_base_class;
}

slider {
    @extend %widget_base_class;
}


/************
 * SpinButton
 ************/
spinbutton {
    @extend %widget_base_class;
}





/*
 * trough in scale/progress bar
 */
@mixin trough_colors($filled_widget) {
    /* trough - not filled part */
    background-color: $trough_free_space_normal_color;
    border-color: $trough_border_normal_color;
    &:disabled {
        background-color: $disable_bg_color;
        border-color: $disable_bg_color;
    }

    /* trough - filled part (highlight or progress) */
    #{$filled_widget} {
        background-color: $trough_filled_space_normal_color;
        border-color: $trough_border_normal_color;
        &:disabled {
            background-color: $disable_bg_color;
            border-color: $disable_bg_color;
        }
    }
}


@mixin trough_size($hw, $filled_widget, $val)
{
    min-#{$hw}: $val;
    #{$filled_widget} {
        min-#{$hw}: $val;
    }
}

/*********
 * Scale *
 *********/
scale {
    trough {
        @include trough_colors(highlight);
		
        slider {
            /* scale slider */

        }
    }

    &.horizontal {
        trough {
            @include trough_size(height, highlight, 6px);
            /* slider */
            slider {
                min-width: 7px;
                min-height: 15px;
            }
        }
    }

    &.vertical {
        trough {
            @include trough_size(width, highlight, 6px);
            /* slider */
            slider {
                min-width: 15px;
                min-height: 7px;
            }
        }
    }
}


/**************
 * Progessbar*
 **************/
progressbar {
    trough {
        @include trough_colors(progress);
    }

    &.horizontal {
        trough {
            @include trough_size(height, progress, 14px);
        }
    }

    &.vertical {
        trough {
            @include trough_size(width, progress, 14px);
        }
    }
}


/*********
 * Frame *
 *********/
frame {
    border {
        color: $frame_border_normal_color;
        &:disabled {
            color: $disable_fg_color;
        }
    }

    label {
        color: $frame_label_normal_fg_color;
        &:disabled {
            color: $disable_fg_color;
        }
    }
}


/*
 * Treeview
 */
scrolledwindow {
    border-style: solid;
}


/*
 * Treeview
 */
treeview {
    /* row */
    &.view {
        @extend %widget_base_class;
		
        &, &:focus { /* hover state is the same as normal state */
            border-style: none solid solid none; /* only right and bottom side has border */
        }
        &:selected {
            border-style: none solid none none;
            background-color: $treeview_view_selected_bg_color;
            &:backdrop {
                color: $base_backdrop_fg_color;
            }
        }
        &:hover {
            border-style: none solid none none;
        }
    }

    /* Title header */
    button {
        @extend %widget_base_class;
        background-image: $treeview_header_bg_image;
        &, &:hover, &:focus, &:active {
            border-style: none;
            border-color: $treeview_generic_border_color;
        }
    }
}


/*
 * titlebar - for generic window
 * headerbar - for several applications such as gedit and gnome-calculator
 */
.titlebar, headerbar {
    color: $fg_color;
    background-image: $headerbar_normal_bg_image;
	border-style:none;
    &:backdrop {
        color: $headerbar_button_backdrop_fg_color;
        background-image: $headerbar_backdrop_bg_image;
    }
    button.titlebutton {
        color: $headerbar_button_normal_fg_color;
        background-image:$headerbar_button_normal_bg_image;
        border-width: 0px;
        /* maximize and minimize close */
        &:hover,&:backdrop:hover {
            color: $headerbar_button_prelight_fg_color;
            background-image: $headerbar_button_prelight_bg_image;
        }
        &:active,&:backdrop:active{
            color: $headerbar_button_active_fg_color;
            background-image: $headerbar_button_active_bg_image;
        }
        &:backdrop {
            color: $headerbar_button_backdrop_fg_color;
            background-image:$headerbar_button_backdrop_bg_image;
        }

        /* close button */
        &.close:hover {
            background-image: $headerbar_closebutton_prelight_bg_image;
        }
        &.close:active {
            background-image: $headerbar_closebutton_active_bg_image;
        }
    }
}
/************
 * Toolbars *
 ************/
%toolbar {
    -GtkWidget-window-dragging: true;
    padding: 4px;
    background:$change_bg_color;
}

toolbar {
    @extend %toolbar;
    padding: 4px 3px 3px 4px;
	
    // on OSD
    .osd & {
        background-color: transparent;
    }
    // stand-alone OSD toolbars
    &.osd {
        padding: 13px;
        border: none;
        border-radius: 5px;
        background-color: $osd_bg_color;

        &.left,
        &.right,
        &.top,
        &.bottom {
            border-radius: 0;
        }

        // positional classes for `attached` osd toolbars

    }
	button {
        @extend %widget_base_class;
        background-image: image($change_bg_color);
    }
    // toolbar separators
    &.horizontal separator {
        margin: 0 7px 1px 6px;
    }

    &.vertical separator {
        margin: 6px 1px 7px 0;
    }

    &:not(.inline-toolbar):not(.osd) {
        switch,
        scale,
        entry,
        spinbutton,
        button {
            margin-right: 1px;

        }
    }
}

//searchbar, location-bar & inline-toolbar
.inline-toolbar {
    @extend %toolbar;
    @extend %darkbar;
    padding: 3px;
    border-width: 1px;
    border-radius: 0  0 5px 5px;
}

searchbar,
.location-bar {
    @extend %toolbar;
    @extend %darkbar;
    border-width: 1px;
    padding: 3px;
	border-color:$active_bg_color;
}

%darkbar {
    border-style: solid;
    border-color: $fg_color;
    background-color: $change_bg_color;

    &:backdrop {
        border-color: $fg_color;
        background-color: $change_bg_color;
        box-shadow: none;
        transition: $backdrop_transition;
    }
}

/************
 * Separator*
 ***********/
separator {
    margin: 3px;
}

/*********
 * Links *
 *********/

%link,
*:link {
    color: $link_fg_color;
    &:visited {
        color: $link_visited_fg_color;
        *:selected & {
            color: $link_selected_fg_color;
        }
    }

    &:hover {
        color: $link_active_fg_color;
        *:selected & {
            color: $link_selected_fg_color;
        }
    }

    &:active {
        color: $link_active_fg_color;
        *:selected & {
            color: $link_selected_fg_color;
        }
    }

    &:backdrop {
        &:backdrop:hover, &:backdrop:hover:selected, & {
            color: $selected_bg_color;
        }
    }

    @at-root %link_selected,
    &:selected,
    *:selected & {
        color: mix($selected_fg_color, $selected_bg_color, 80%);
    }
}

button:link,
button:visited {
    @extend %undecorated_button;
    @extend *, :link;
    text-shadow: none;
    &:hover,
    &:active,
    &:checked {
        @extend %undecorated_button;
        text-shadow: none;
    }

    > label {
        @extend %link;
        text-decoration-line: underline;
    }
}

/*********
 * Emoji *
 ********/

popover.emoji-picker { 
	padding-left: 0;
    padding-right: 0;
}

button.emoji-section {
    border-color: transparent;
    border-width: 3px;
    border-style: none none solid;
    border-radius: 0;
    margin: 2px 4px 2px 4px;
    padding: 3px 0 0;
    min-width: 32px;
    min-height: 28px;
    background: none;
    box-shadow: none;
    text-shadow: none;
    outline-offset: -5px;
    &:backdrop:not(:checked) {
        border-color: transparent;
    }
    &:hover {
        border-color: $bg_color;
    }
    &:checked {
        border-color: $selected_bg_color;
    }
    label {
        padding: 0;
        opacity: 0.55;
    }
    &:hover label {
        opacity: 0.775;
    }
    &:checked label {
        opacity: 1;
    }
}
.emoji {
    font-size: x-large;
    padding: 6px;
    border-radius: 6px;
    :hover {
        background: $selected_bg_color;
    }
}
